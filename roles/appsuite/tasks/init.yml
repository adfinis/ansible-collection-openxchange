---

- name: Initialize configdb
  run_once: true
  ansible.builtin.command: >-
    /opt/open-xchange/sbin/initconfigdb
    --configdb-host {{ appsuite_configdb_host }}
    --configdb-port {{ appsuite_configdb_port }}
    --configdb-dbname {{ appsuite_configdb_database }}
    --configdb-user {{ appsuite_configdb_user }}
    --configdb-pass {{ appsuite_configdb_pass }}
    {% if appsuite_configdb_createuser %}
    -a
    --mysql-root-user {{ appsuite_configdb_root_user }}
    {% if appsuite_configdb_root_pass is not none %}
    --mysql-root-passwd {{ appsuite_configdb_root_pass }}
    {% endif %}
    {% endif %}
  changed_when: true

- name: Run the App Suite installer on all nodes
  ansible.builtin.import_tasks: oxinstaller.yml

- name: Start open-xchange
  run_once: true
  ansible.builtin.service:
    name: open-xchange
    state: started

- name: Register the cluster in configdb
  run_once: true
  ansible.builtin.command: >-
    /opt/open-xchange/sbin/registerserver
    --name {{ appsuite_servername }}
    --adminuser {{ appsuite_master_user }}
    --adminpass {{ appsuite_master_pass }}
  changed_when: true

- name: Register the filestore in configdb
  run_once: true
  ansible.builtin.command: >-
    /opt/open-xchange/sbin/registerfilestore
    --storepath {{ appsuite_filestore_path }}
    --adminuser {{ appsuite_master_user }}
    --adminpass {{ appsuite_master_pass }}
  changed_when: true

- name: Register the write user database in configdb
  run_once: true
  ansible.builtin.command: >-
    /opt/open-xchange/sbin/registerdatabase
    --adminuser {{ appsuite_master_user }}
    --adminpass {{ appsuite_master_pass }}
    --name {{ appsuite_userdb_write_alias }}
    --hostname {{ appsuite_userdb_write_host }}
    --dbdriver {{ appsuite_userdb_write_driver }}
    --dbuser {{ appsuite_userdb_write_user }}
    --dbpasswd {{ appsuite_userdb_write_pass }}
    --master true
  changed_when: true

- name: Fetch the write user database pool id from configdb
  run_once: true
  community.mysql.mysql_query:
    login_host: "{{ appsuite_configdb_host }}"
    login_port: "{{ appsuite_configdb_port }}"
    login_user: "{{ appsuite_configdb_user }}"
    login_password: "{{ appsuite_configdb_pass }}"
    login_db: "{{ appsuite_configdb_database }}"
    query: >-
      SELECT db_pool_id
      FROM db_pool
      WHERE name = %s
    positional_args:
      - "{{ appsuite_userdb_write_alias }}"
  # There should be exactly one such db_pool name, fail otherwise
  failed_when: "appsuite_register_init_write_userdb.query_result[0] | length != 1"
  changed_when: false
  check_mode: false
  register: appsuite_register_init_write_userdb

- name: Register the read user database in configdb
  run_once: true
  ansible.builtin.command: >-
    /opt/open-xchange/sbin/registerdatabase
    --adminuser {{ appsuite_master_user }}
    --adminpass {{ appsuite_master_pass }}
    --name {{ appsuite_userdb_read_alias }}
    --hostname {{ appsuite_userdb_read_host }}
    --dbdriver {{ appsuite_userdb_read_driver }}
    --dbuser {{ appsuite_userdb_read_user }}
    --dbpasswd {{ appsuite_userdb_read_pass }}
    --master false
    --masterid {{ masterid }}
  changed_when: true
  vars:
    masterid: "{{ appsuite_register_init_write_userdb.query_result[0][0]['db_pool_id'] }}"

- name: Register the userdb as cross-context write database in configdb
  run_once: true
  ansible.builtin.command: >-
    /opt/open-xchange/sbin/registerdatabase
    --adminuser {{ appsuite_master_user }}
    --adminpass {{ appsuite_master_pass }}
    --name oxglobal
    --hostname {{ appsuite_userdb_write_host }}
    --dbdriver {{ appsuite_userdb_write_driver }}
    --dbuser {{ appsuite_userdb_write_user }}
    --dbpasswd {{ appsuite_userdb_write_pass }}
    --maxunit 0
    --master true
  changed_when: true

- name: Fetch the ccdb pool id from configdb
  run_once: true
  community.mysql.mysql_query:
    login_host: "{{ appsuite_configdb_host }}"
    login_port: "{{ appsuite_configdb_port }}"
    login_user: "{{ appsuite_configdb_user }}"
    login_password: "{{ appsuite_configdb_pass }}"
    login_db: "{{ appsuite_configdb_database }}"
    query: >-
      SELECT db_pool_id
      FROM db_pool
      WHERE name = 'oxglobal'
  # There should be exactly one such db_pool name, fail otherwise
  failed_when: "appsuite_register_init_write_ccdb.query_result[0] | length != 1"
  changed_when: false
  check_mode: false
  register: appsuite_register_init_write_ccdb

- name: Register the userdb as cross-context read database in configdb
  run_once: true
  ansible.builtin.command: >-
    /opt/open-xchange/sbin/registerdatabase
    --adminuser {{ appsuite_master_user }}
    --adminpass {{ appsuite_master_pass }}
    --name oxglobal_slave
    --hostname {{ appsuite_userdb_read_host }}
    --dbdriver {{ appsuite_userdb_read_driver }}
    --dbuser {{ appsuite_userdb_read_user }}
    --dbpasswd {{ appsuite_userdb_read_pass }}
    --maxunit 0
    --master false
    --masterid {{ masterid }}
  changed_when: true
  vars:
    masterid: "{{ appsuite_register_init_write_ccdb.query_result[0][0]['db_pool_id'] }}"

- name: Stop open-xchange
  run_once: true
  ansible.builtin.service:
    name: open-xchange
    state: stopped
